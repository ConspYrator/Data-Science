from sklearn.grid_search import GridSearchCV 
from sklearn.svm import SVC
from sklearn.cross_validation import StratifiedShuffleSplit

parameters = {'C' : [0.1, 1, 10, 100, 1000], 'gamma' : [0.0001, 0.001, 0.1, 10, 100]} # Some SVC parameters
ssscv = StratifiedShuffleSplit(y_train, n_iter=10, test_size=0.1) # 1. Let's build a stratified shuffle object
grid = GridSearchCV(SVC(), parameters, cv = ssscv) # 2. Let's now we pass the object and the parameters to grid search
grid.fit(X_train, y_train) # 3. Let's fit it
best = grid.best_estimator_ # 4. Let's reteieve the best estimator found
y_pred = best.predict(X_test) # 5. Let's make predictions!
print "F1 score: {}".format(f1_score( y_test, y_pred, pos_label = 'yes'))
print "Best params: {}".format(grid.best_params_)
